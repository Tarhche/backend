# app placement
x-app: &app
  build:
    context: .
    dockerfile: Dockerfile
    target: develop
  restart: unless-stopped
  depends_on:
    - mongodb
    - minio
    - minio_configure
  volumes:
    - ./:/opt/app
  environment:
    PRIVATE_KEY: ${PRIVATE_KEY}
    S3_ENDPOINT: ${S3_ENDPOINT}
    S3_ACCESS_KEY: ${S3_ACCESS_KEY}
    S3_SECRET_KEY: ${S3_SECRET_KEY}
    S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    S3_USE_SSL: ${S3_USE_SSL}
    MONGO_SCHEME: ${MONGO_SCHEME}
    MONGO_USERNAME: ${MONGO_USERNAME}
    MONGO_PASSWORD: ${MONGO_PASSWORD}
    MONGO_HOST: ${MONGO_HOST}
    MONGO_PORT: ${MONGO_PORT}
    MONGO_DATABASE_NAME: ${MONGO_DATABASE_NAME}
    MAIL_SMTP_FROM: ${MAIL_SMTP_FROM}
    MAIL_SMTP_USERNAME: ${MAIL_SMTP_USERNAME}
    MAIL_SMTP_PASSWORD: ${MAIL_SMTP_PASSWORD}
    MAIL_SMTP_HOST: ${MAIL_SMTP_HOST}
    MAIL_SMTP_PORT: ${MAIL_SMTP_PORT}
    NATS_URL: ${NATS_URL}
    DOCKER_HOST: ${DOCKER_HOST}

services:
  frontend:
    image: ghcr.io/tarhche/frontend:latest
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "3000:3000"
    environment:
      INTERNAL_BACKEND_BASE_URL: "http://app"
      NEXT_PUBLIC_FILES_PROTOCOL: "http"
      NEXT_PUBLIC_FILES_HOST: "localhost:8000"

  app:
    <<: *app
    ports:
      - "8000:80"

  runner:
    <<: *app
    ports:
      - "8001:80"
    command: >
      sleep 3600

  mongodb:
    image: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./tmp/mongodb/db:/data/db
      - ./tmp/mongodb/configdb:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

  mongodashboard:
    image: mongo-express
    restart: unless-stopped
    depends_on:
      - mongodb
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: username
      ME_CONFIG_BASICAUTH_PASSWORD: password
      ME_CONFIG_MONGODB_URL: ${MONGO_SCHEME}://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}

  minio:
    image: minio/minio
    restart: unless-stopped
    ports:
      - "9100:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: ["server", "/data", "--console-address", ":9001"]

  minio_configure:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc config host add minio http://minio:9000 ${S3_ACCESS_KEY} ${S3_SECRET_KEY};
      mc mb minio/blog;"

  nats:
    image: nats:2.10
    command: ["--jetstream", "--http_port", "8222", "--port", "4222", "--store_dir", "/data"]
    ports:
      - "4222:4222" # client port
      - "6222:6222" # cluster post
      - "8222:8222" # HTTP monitoring port
    volumes:
      - ./tmp/nats:/data

  natsdashboard:
    image: mdawar/nats-dashboard
    ports:
      - "8082:80"

  docker:
    image: docker:27-dind
    restart: unless-stopped
    privileged: true
    ports:
      - "2375:2375"
    environment:
      DOCKER_TLS_CERTDIR: "" # disable certs

  portainer:
    image: portainer/portainer-ce
    restart: unless-stopped
    depends_on:
      - docker
    ports:
      - "9200:9000"
      - "9443:9443"
    command: >
      --admin-password="$$2a$$12$$4xcOa82Ni5rjgQF.v.JWi.i71OyUm3fwmfWiumgJHIAPGU.uOw3qu"
    # username: admin
    # password: admin-password
    # standalone docker API url: docker:2375
